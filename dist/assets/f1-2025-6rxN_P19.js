var v=(s=>(s[s.MOTION=0]="MOTION",s[s.SESSION=1]="SESSION",s[s.LAP_DATA=2]="LAP_DATA",s[s.EVENT=3]="EVENT",s[s.PARTICIPANTS=4]="PARTICIPANTS",s[s.CAR_SETUPS=5]="CAR_SETUPS",s[s.CAR_TELEMETRY=6]="CAR_TELEMETRY",s[s.CAR_STATUS=7]="CAR_STATUS",s[s.FINAL_CLASSIFICATION=8]="FINAL_CLASSIFICATION",s[s.LOBBY_INFO=9]="LOBBY_INFO",s[s.CAR_DAMAGE=10]="CAR_DAMAGE",s[s.SESSION_HISTORY=11]="SESSION_HISTORY",s[s.TYRE_SETS=12]="TYRE_SETS",s[s.MOTION_EX=13]="MOTION_EX",s[s.TIME_TRIAL=14]="TIME_TRIAL",s[s.LAP_POSITIONS=15]="LAP_POSITIONS",s))(v||{});class tt{decode(t){if(t.byteLength<29)return console.warn("F1 25 decoder: Buffer too small for packet header"),null;const a=new DataView(t);let o=0;try{const n=this.readPacketHeader(a,o);switch(o+=29,n.packetId){case 0:return this.decodeMotionPacket(a,o,n);case 1:return this.decodeSessionPacket(a,o,n);case 2:return this.decodeLapDataPacket(a,o,n);case 3:return this.decodeEventPacket(a,o,n);case 4:return this.decodeParticipantsPacket(a,o,n);case 5:return this.decodeCarSetupsPacket(a,o,n);case 6:return this.decodeTelemetryPacket(a,o,n);case 7:return this.decodeCarStatusPacket(a,o,n);case 8:return this.decodeFinalClassificationPacket(a,o,n);case 9:return this.decodeLobbyInfoPacket(a,o,n);case 10:return this.decodeCarDamagePacket(a,o,n);case 11:return this.decodeSessionHistoryPacket(a,o,n);case 12:return this.decodeTyreSetsPacket(a,o,n);case 13:return this.decodeMotionExPacket(a,o,n);case 14:return this.decodeTimeTrialPacket(a,o,n);case 15:return this.decodeLapPositionsPacket(a,o,n);default:return this.createBasicFrame(n)}}catch(n){return console.error("F1 25 decoder error:",n),null}}readPacketHeader(t,a){return{packetFormat:t.getUint16(a,!0),gameYear:t.getUint8(a+2),gameMajorVersion:t.getUint8(a+3),gameMinorVersion:t.getUint8(a+4),packetVersion:t.getUint8(a+5),packetId:t.getUint8(a+6),sessionUID:t.getBigUint64(a+7,!0),sessionTime:t.getFloat32(a+15,!0),frameIdentifier:t.getUint32(a+19,!0),overallFrameIdentifier:t.getUint32(a+23,!0),playerCarIndex:t.getUint8(a+27),secondaryPlayerCarIndex:t.getUint8(a+28)}}decodeMotionPacket(t,a,o){let e=a+o.playerCarIndex*60;return e+60>t.byteLength?(console.warn("F1 25 decoder: Motion packet too small for CarMotionData"),null):{...this.headerToFrame(o),packet_type:0,worldPositionX:t.getFloat32(e,!0),worldPositionY:t.getFloat32(e+=4,!0),worldPositionZ:t.getFloat32(e+=4,!0),worldVelocityX:t.getFloat32(e+=4,!0),worldVelocityY:t.getFloat32(e+=4,!0),worldVelocityZ:t.getFloat32(e+=4,!0),worldForwardDirX:t.getInt16(e+=4,!0)/32767,worldForwardDirY:t.getInt16(e+=2,!0)/32767,worldForwardDirZ:t.getInt16(e+=2,!0)/32767,worldRightDirX:t.getInt16(e+=2,!0)/32767,worldRightDirY:t.getInt16(e+=2,!0)/32767,worldRightDirZ:t.getInt16(e+=2,!0)/32767,gForceLateral:t.getFloat32(e+=2,!0),gForceLongitudinal:t.getFloat32(e+=4,!0),gForceVertical:t.getFloat32(e+=4,!0),yaw:t.getFloat32(e+=4,!0),pitch:t.getFloat32(e+=4,!0),roll:t.getFloat32(e+=4,!0)}}decodeTelemetryPacket(t,a,o){let e=a+o.playerCarIndex*60;return e+60>t.byteLength?(console.warn("F1 25 decoder: Telemetry packet too small"),null):{...this.headerToFrame(o),packet_type:6,speed:t.getUint16(e,!0),throttle:t.getFloat32(e+=2,!0),steer:t.getFloat32(e+=4,!0),brake:t.getFloat32(e+=4,!0),clutch:t.getUint8(e+=4),gear:t.getInt8(e+=1),engineRPM:t.getUint16(e+=1,!0),drs:t.getUint8(e+=2),revLightsPercent:t.getUint8(e+=1),revLightsBitValue:t.getUint16(e+=1,!0),brakesTemperatureRL:t.getUint16(e+=2,!0),brakesTemperatureRR:t.getUint16(e+=2,!0),brakesTemperatureFL:t.getUint16(e+=2,!0),brakesTemperatureFR:t.getUint16(e+=2,!0),tyresSurfaceTemperatureRL:t.getUint8(e+=2),tyresSurfaceTemperatureRR:t.getUint8(e+=1),tyresSurfaceTemperatureFL:t.getUint8(e+=1),tyresSurfaceTemperatureFR:t.getUint8(e+=1),tyresInnerTemperatureRL:t.getUint8(e+=1),tyresInnerTemperatureRR:t.getUint8(e+=1),tyresInnerTemperatureFL:t.getUint8(e+=1),tyresInnerTemperatureFR:t.getUint8(e+=1),engineTemperature:t.getUint16(e+=1,!0),tyresPressureRL:t.getFloat32(e+=2,!0),tyresPressureRR:t.getFloat32(e+=4,!0),tyresPressureFL:t.getFloat32(e+=4,!0),tyresPressureFR:t.getFloat32(e+=4,!0),surfaceTypeRL:t.getUint8(e+=4),surfaceTypeRR:t.getUint8(e+=1),surfaceTypeFL:t.getUint8(e+=1),surfaceTypeFR:t.getUint8(e+=1)}}decodeLapDataPacket(t,a,o){let e=a+o.playerCarIndex*53;return e+53>t.byteLength?(console.warn("F1 25 decoder: Lap data packet too small"),null):{...this.headerToFrame(o),packet_type:2,lastLapTimeInMS:t.getUint32(e,!0),currentLapTimeInMS:t.getUint32(e+=4,!0),sector1TimeInMS:t.getUint16(e+=4,!0),sector1TimeMinutes:t.getUint8(e+=2),sector2TimeInMS:t.getUint16(e+=1,!0),sector2TimeMinutes:t.getUint8(e+=2),deltaToCarInFrontInMS:t.getUint16(e+=1,!0),deltaToRaceLeaderInMS:t.getUint16(e+=2,!0),lapDistance:t.getFloat32(e+=2,!0),totalDistance:t.getFloat32(e+=4,!0),safetyCarDelta:t.getFloat32(e+=4,!0),carPosition:t.getUint8(e+=4),currentLapNum:t.getUint8(e+=1),pitStatus:t.getUint8(e+=1),numPitStops:t.getUint8(e+=1),sector:t.getUint8(e+=1),currentLapInvalid:t.getUint8(e+=1),penalties:t.getUint8(e+=1),totalWarnings:t.getUint8(e+=1),cornerCuttingWarnings:t.getUint8(e+=1),numUnservedDriveThroughPens:t.getUint8(e+=1),numUnservedStopGoPens:t.getUint8(e+=1),gridPosition:t.getUint8(e+=1),driverStatus:t.getUint8(e+=1),resultStatus:t.getUint8(e+=1),pitLaneTimerActive:t.getUint8(e+=1),pitLaneTimeInLaneInMS:t.getUint16(e+=1,!0),pitStopTimerInMS:t.getUint16(e+=2,!0),pitStopShouldServePen:t.getUint8(e+=2),speedTrapFastestSpeed:t.getFloat32(e+=1,!0),speedTrapFastestLap:t.getUint8(e+=4)}}decodeCarStatusPacket(t,a,o){let e=a+o.playerCarIndex*47;return e+47>t.byteLength?(console.warn("F1 25 decoder: Car status packet too small"),null):{...this.headerToFrame(o),packet_type:7,tractionControl:t.getUint8(e),antiLockBrakes:t.getUint8(e+=1),fuelMix:t.getUint8(e+=1),frontBrakeBias:t.getUint8(e+=1),pitLimiterStatus:t.getUint8(e+=1),fuelInTank:t.getFloat32(e+=1,!0),fuelCapacity:t.getFloat32(e+=4,!0),fuelRemainingLaps:t.getFloat32(e+=4,!0),maxRPM:t.getUint16(e+=4,!0),idleRPM:t.getUint16(e+=2,!0),maxGears:t.getUint8(e+=2),drsAllowed:t.getUint8(e+=1),drsActivationDistance:t.getUint16(e+=1,!0),actualTyreCompound:t.getUint8(e+=2),visualTyreCompound:t.getUint8(e+=1),tyresAgeLaps:t.getUint8(e+=1),vehicleFiaFlags:t.getInt8(e+=1),enginePowerICE:t.getFloat32(e+=1,!0),enginePowerMGUK:t.getFloat32(e+=4,!0),ersStoreEnergy:t.getFloat32(e+=4,!0),ersDeployMode:t.getUint8(e+=4),ersHarvestedThisLapMGUK:t.getFloat32(e+=1,!0),ersHarvestedThisLapMGUH:t.getFloat32(e+=4,!0),ersDeployedThisLap:t.getFloat32(e+=4,!0),networkPaused:t.getUint8(e+=4)}}decodeSessionPacket(t,a,o){let n=a;return n+644>t.byteLength?(console.warn("F1 25 decoder: Session packet too small"),null):{...this.headerToFrame(o),packet_type:1,weather:t.getUint8(n),trackTemperature:t.getInt8(n+=1),airTemperature:t.getInt8(n+=1),totalLaps:t.getUint8(n+=1),trackLength:t.getUint16(n+=1,!0),sessionType:t.getUint8(n+=2),trackId:t.getInt8(n+=1),formula:t.getUint8(n+=1),sessionTimeLeft:t.getUint16(n+=1,!0),sessionDuration:t.getUint16(n+=2,!0),pitSpeedLimit:t.getUint8(n+=2),gamePaused:t.getUint8(n+=1),isSpectating:t.getUint8(n+=1),spectatorCarIndex:t.getUint8(n+=1),sliProNativeSupport:t.getUint8(n+=1),numMarshalZones:t.getUint8(n+=1),safetyCarStatus:t.getUint8(n+=1),networkGame:t.getUint8(n+=1),numWeatherForecastSamples:t.getUint8(n+=1),forecastAccuracy:t.getUint8(n+=1),aiDifficulty:t.getUint8(n+=1),seasonLinkIdentifier:t.getUint32(n+=1,!0),weekendLinkIdentifier:t.getUint32(n+=4,!0),sessionLinkIdentifier:t.getUint32(n+=4,!0),pitStopWindowIdealLap:t.getUint8(n+=4),pitStopWindowLatestLap:t.getUint8(n+=1),pitStopRejoinPosition:t.getUint8(n+=1),steeringAssist:t.getUint8(n+=1),brakingAssist:t.getUint8(n+=1),gearboxAssist:t.getUint8(n+=1),pitAssist:t.getUint8(n+=1),pitReleaseAssist:t.getUint8(n+=1),ERSAssist:t.getUint8(n+=1),DRSAssist:t.getUint8(n+=1),dynamicRacingLine:t.getUint8(n+=1),dynamicRacingLineType:t.getUint8(n+=1),gameMode:t.getUint8(n+=1),ruleSet:t.getUint8(n+=1),timeOfDay:t.getUint32(n+=1,!0),sessionLength:t.getUint8(n+=4),speedUnitsLeadPlayer:t.getUint8(n+=1),temperatureUnitsLeadPlayer:t.getUint8(n+=1),speedUnitsSecondaryPlayer:t.getUint8(n+=1),temperatureUnitsSecondaryPlayer:t.getUint8(n+=1),numSafetyCarPeriods:t.getUint8(n+=1),numVirtualSafetyCarPeriods:t.getUint8(n+=1),numRedFlagPeriods:t.getUint8(n+=1)}}decodeEventPacket(t,a,o){let n=a;if(n+7>t.byteLength)return console.warn("F1 25 decoder: Event packet too small"),null;const e=new Uint8Array(t.buffer,t.byteOffset+n,4),l=String.fromCharCode(...e);return n+=4,{...this.headerToFrame(o),packet_type:3,eventStringCode:l,eventDetails:{}}}decodeParticipantsPacket(t,a,o){let n=a;if(n+1>t.byteLength)return console.warn("F1 25 decoder: Participants packet too small"),null;const e=t.getUint8(n);n+=1;const l=n+o.playerCarIndex*58;if(l+58>t.byteLength)return console.warn("F1 25 decoder: Participants packet too small for player data"),null;let r=l;const i=t.getUint8(r);r+=1;const g=t.getUint8(r);r+=1;const u=t.getUint8(r);r+=1;const p=t.getUint8(r);r+=1;const U=t.getUint8(r);r+=1;const m=t.getUint8(r);r+=1;const f=t.getUint8(r);r+=1;const y=String.fromCharCode(...new Uint8Array(t.buffer,t.byteOffset+r,32)).replace(/\0+$/,"");r+=32;const F=t.getUint8(r);r+=1;const S=t.getUint8(r);r+=1;const L=t.getUint8(r);r+=1;const I=t.getUint8(r);r+=1;const T=[];for(let C=0;C<4;C++)T.push({r:t.getUint8(r),g:t.getUint8(r+1),b:t.getUint8(r+2)}),r+=3;return{...this.headerToFrame(o),packet_type:4,numActiveCars:e,aiControlled:i,driverId:g,networkId:u,teamId:p,myTeam:U,raceNumber:m,nationality:f,name:y,yourTelemetry:F,showOnlineNames:S,platform:L,numColours:I,liveryColours:T}}decodeCarSetupsPacket(t,a,o){const n=a+o.playerCarIndex*49;if(n+49>t.byteLength)return console.warn("F1 25 decoder: Car setups packet too small"),null;let e=n;const l=t.getUint8(e);e+=1;const r=t.getUint8(e);e+=1;const i=t.getUint8(e);e+=1;const g=t.getUint8(e);e+=1;const u=t.getFloat32(e,!0);e+=4;const p=t.getFloat32(e,!0);e+=4;const U=t.getFloat32(e,!0);e+=4;const m=t.getFloat32(e,!0);e+=4;const f=t.getUint8(e);e+=1;const y=t.getUint8(e);e+=1;const F=t.getUint8(e);e+=1;const S=t.getUint8(e);e+=1;const L=t.getUint8(e);e+=1;const I=t.getUint8(e);e+=1;const T=t.getUint8(e);e+=1;const c=t.getUint8(e);e+=1;const C=t.getFloat32(e,!0);e+=4;const R=t.getFloat32(e,!0);e+=4;const d=t.getFloat32(e,!0);e+=4;const k=t.getFloat32(e,!0);e+=4;const b=t.getUint8(e);e+=1;const P=t.getFloat32(e,!0);return{...this.headerToFrame(o),packet_type:5,frontWing:l,rearWing:r,onThrottle:i,offThrottle:g,frontCamber:u,rearCamber:p,frontToe:U,rearToe:m,frontSuspension:f,rearSuspension:y,frontAntiRollBar:F,rearAntiRollBar:S,frontSuspensionHeight:L,rearSuspensionHeight:I,brakePressure:T,brakeBalance:c,rearLeftTyrePressure:C,rearRightTyrePressure:R,frontLeftTyrePressure:d,frontRightTyrePressure:k,ballast:b,fuelLoad:P}}decodeFinalClassificationPacket(t,a,o){let n=a;if(n+1>t.byteLength)return console.warn("F1 25 decoder: Final classification packet too small"),null;const e=t.getUint8(n);n+=1;const l=n+o.playerCarIndex*46;if(l+46>t.byteLength)return console.warn("F1 25 decoder: Final classification packet too small for player data"),null;let r=l;const i=[],g=[],u=[],p=t.getUint8(r);r+=1;const U=t.getUint8(r);r+=1;const m=t.getUint8(r);r+=1;const f=t.getUint8(r);r+=1;const y=t.getUint8(r);r+=1;const F=t.getUint8(r);r+=1;const S=t.getUint32(r,!0);r+=4;const L=t.getFloat64(r,!0);r+=8;const I=t.getUint8(r);r+=1;const T=t.getUint8(r);r+=1;const c=t.getUint8(r);r+=1;for(let d=0;d<8;d++)i.push(t.getUint8(r+d));r+=8;for(let d=0;d<8;d++)g.push(t.getUint8(r+d));r+=8;for(let d=0;d<8;d++)u.push(t.getUint8(r+d));r+=8;const C=t.getUint8(r);return{...this.headerToFrame(o),packet_type:8,numCars:e,position:p,numLaps:U,gridPosition:m,points:f,numPitStops:y,resultStatus:F,bestLapTimeInMS:S,totalRaceTime:L,penaltiesTime:I,numPenalties:T,numTyreStints:c,tyreStintsActual:i,tyreStintsVisual:g,tyreStintsEndLaps:u,resultReason:C}}decodeLobbyInfoPacket(t,a,o){let n=a;if(n+1>t.byteLength)return console.warn("F1 25 decoder: Lobby info packet too small"),null;const e=t.getUint8(n);n+=1;const l=n+o.playerCarIndex*42;if(l+42>t.byteLength)return console.warn("F1 25 decoder: Lobby info packet too small for player data"),null;let r=l;const i=t.getUint8(r);r+=1;const g=t.getUint8(r);r+=1;const u=t.getUint8(r);r+=1;const p=t.getUint8(r);r+=1;const U=String.fromCharCode(...new Uint8Array(t.buffer,t.byteOffset+r,32)).replace(/\0+$/,"");r+=32;const m=t.getUint8(r);r+=1;const f=t.getUint8(r);return{...this.headerToFrame(o),packet_type:9,numPlayers:e,aiControlled:i,teamId:g,nationality:u,platform:p,name:U,carNumber:m,readyStatus:f}}decodeCarDamagePacket(t,a,o){const n=a+o.playerCarIndex*46;if(n+46>t.byteLength)return console.warn("F1 25 decoder: Car damage packet too small"),null;let e=n;const l=[],r=[],i=[],g=[];for(let h=0;h<4;h++)l.push(t.getFloat32(e,!0)),e+=4;for(let h=0;h<4;h++)r.push(t.getUint8(e)),e+=1;for(let h=0;h<4;h++)i.push(t.getUint8(e)),e+=1;const u=t.getUint8(e);e+=1;const p=t.getUint8(e);e+=1;const U=t.getUint8(e);e+=1;const m=t.getUint8(e);e+=1;const f=t.getUint8(e);e+=1;const y=t.getUint8(e);e+=1;const F=t.getUint8(e);e+=1;const S=t.getUint8(e);e+=1;const L=t.getUint8(e);e+=1;const I=t.getUint8(e);e+=1;const T=t.getUint8(e);e+=1;const c=t.getUint8(e);e+=1;const C=t.getUint8(e);e+=1;const R=t.getUint8(e);e+=1;const d=t.getUint8(e);e+=1;const k=t.getUint8(e);e+=1;const b=t.getUint8(e);e+=1;const P=t.getUint8(e);e+=1;for(let h=0;h<4;h++)g.push(t.getUint8(e)),e+=1;return{...this.headerToFrame(o),packet_type:10,tyresWear:l,tyresDamage:r,brakesDamage:i,frontLeftWingDamage:u,frontRightWingDamage:p,rearWingDamage:U,floorDamage:m,diffuserDamage:f,sidepodDamage:y,drsFault:F,ersFault:S,gearBoxDamage:L,engineDamage:I,engineMGUHWear:T,engineESWear:c,engineCEWear:C,engineICEWear:R,engineMGUKWear:d,engineTCWear:k,engineBlown:b,engineSeized:P,tyreBlisters:g}}decodeSessionHistoryPacket(t,a,o){let n=a;if(n+8>t.byteLength)return console.warn("F1 25 decoder: Session history packet too small"),null;const e=t.getUint8(n);n+=1;const l=t.getUint8(n);n+=1;const r=t.getUint8(n);n+=1;const i=t.getUint8(n);n+=1;const g=t.getUint8(n);n+=1;const u=t.getUint8(n);n+=1;const p=t.getUint8(n);n+=1;const U=[],m=[],f=[],y=[],F=[],S=[],L=[],I=[];for(let c=0;c<100&&!(n+4>t.byteLength);c++)U.push(t.getUint32(n,!0)),n+=4;for(let c=0;c<100&&!(n+2>t.byteLength);c++)m.push(t.getUint16(n,!0)),n+=2;for(let c=0;c<100&&!(n+2>t.byteLength);c++)f.push(t.getUint16(n,!0)),n+=2;for(let c=0;c<100&&!(n+2>t.byteLength);c++)y.push(t.getUint16(n,!0)),n+=2;for(let c=0;c<100&&!(n+1>t.byteLength);c++)F.push(t.getUint8(n)),n+=1;for(let c=0;c<8&&!(n+1>t.byteLength);c++)S.push(t.getUint8(n)),n+=1;for(let c=0;c<8&&!(n+1>t.byteLength);c++)L.push(t.getUint8(n)),n+=1;for(let c=0;c<8&&!(n+1>t.byteLength);c++)I.push(t.getUint8(n)),n+=1;return{...this.headerToFrame(o),packet_type:11,carIdx:e,numLaps:l,numTyreStints:r,bestLapTimeLapNum:i,bestSector1LapNum:g,bestSector2LapNum:u,bestSector3LapNum:p,lapTimeInMS:U,sector1TimeInMS:m,sector2TimeInMS:f,sector3TimeInMS:y,lapValidBitFlags:F,endLap:S,tyreActualCompound:L,tyreVisualCompound:I}}decodeTyreSetsPacket(t,a,o){let n=a;if(n+1>t.byteLength)return console.warn("F1 25 decoder: Tyre sets packet too small"),null;const e=t.getUint8(n);return n+=1,{...this.headerToFrame(o),packet_type:12,carIdx:e,tyreSetData:[]}}decodeMotionExPacket(t,a,o){const n=a+o.playerCarIndex*156;if(n+156>t.byteLength)return console.warn("F1 25 decoder: Motion ex packet too small"),null;let e=n;const l=t.getFloat32(e,!0);e+=4;const r=t.getFloat32(e,!0);e+=4;const i=t.getFloat32(e,!0);e+=4;const g=t.getFloat32(e,!0);e+=4;const u=t.getFloat32(e,!0);e+=4;const p=t.getFloat32(e,!0);e+=4;const U=t.getFloat32(e,!0);e+=4;const m=t.getFloat32(e,!0);e+=4;const f=t.getFloat32(e,!0);e+=4;const y=t.getFloat32(e,!0);e+=4;const F=t.getFloat32(e,!0);e+=4;const S=t.getFloat32(e,!0);e+=4;const L=t.getFloat32(e,!0);e+=4;const I=t.getFloat32(e,!0);e+=4;const T=t.getFloat32(e,!0);e+=4;const c=t.getFloat32(e,!0);e+=4;const C=t.getFloat32(e,!0);e+=4;const R=t.getFloat32(e,!0);e+=4;const d=t.getFloat32(e,!0);e+=4;const k=t.getFloat32(e,!0);e+=4;const b=t.getFloat32(e,!0);e+=4;const P=t.getFloat32(e,!0);e+=4;const A=t.getFloat32(e,!0);e+=4;const h=t.getFloat32(e,!0);e+=4;const M=t.getFloat32(e,!0);e+=4;const D=t.getFloat32(e,!0);e+=4;const O=t.getFloat32(e,!0);e+=4;const E=t.getFloat32(e,!0);e+=4;const V=t.getFloat32(e,!0);e+=4;const x=t.getFloat32(e,!0);e+=4;const N=t.getFloat32(e,!0);e+=4;const B=t.getFloat32(e,!0);e+=4;const W=t.getFloat32(e,!0);e+=4;const Y=t.getFloat32(e,!0);e+=4;const G=t.getFloat32(e,!0);e+=4;const H=t.getFloat32(e,!0);e+=4;const X=t.getFloat32(e,!0);e+=4;const Z=t.getFloat32(e,!0);e+=4;const j=t.getFloat32(e,!0);e+=4;const K=t.getFloat32(e,!0);e+=4;const $=t.getFloat32(e,!0);e+=4;const z=t.getFloat32(e,!0);e+=4;const q=t.getFloat32(e,!0);e+=4;const J=t.getFloat32(e,!0);e+=4;const Q=t.getFloat32(e,!0);e+=4;const _=t.getFloat32(e,!0);e+=4;const w=t.getFloat32(e,!0);return{...this.headerToFrame(o),packet_type:13,suspensionPositionRL:l,suspensionPositionRR:r,suspensionPositionFL:i,suspensionPositionFR:g,suspensionVelocityRL:u,suspensionVelocityRR:p,suspensionVelocityFL:U,suspensionVelocityFR:m,suspensionAccelerationRL:f,suspensionAccelerationRR:y,suspensionAccelerationFL:F,suspensionAccelerationFR:S,wheelSpeedRL:L,wheelSpeedRR:I,wheelSpeedFL:T,wheelSpeedFR:c,wheelSlipRatioRL:C,wheelSlipRatioRR:R,wheelSlipRatioFL:d,wheelSlipRatioFR:k,wheelSlipAngleRL:b,wheelSlipAngleRR:P,wheelSlipAngleFL:A,wheelSlipAngleFR:h,localVelocityX:M,localVelocityY:D,localVelocityZ:O,angularVelocityX:E,angularVelocityY:V,angularVelocityZ:x,angularAccelerationX:N,angularAccelerationY:B,angularAccelerationZ:W,frontWheelsAngle:Y,wheelVertForceRL:G,wheelVertForceRR:H,wheelVertForceFL:X,wheelVertForceFR:Z,chassisPitch:j,wheelCamberRL:K,wheelCamberRR:$,wheelCamberFL:z,wheelCamberFR:q,wheelCamberGainRL:J,wheelCamberGainRR:Q,wheelCamberGainFL:_,wheelCamberGainFR:w}}decodeTimeTrialPacket(t,a,o){let n=a;if(n+24>t.byteLength)return console.warn("F1 25 decoder: Time trial packet too small"),null;const e=t.getUint8(n);n+=1;const l=t.getUint8(n);n+=1;const r=t.getUint32(n,!0);n+=4;const i=t.getUint32(n,!0);n+=4;const g=t.getUint32(n,!0);n+=4;const u=t.getUint32(n,!0);n+=4;const p=t.getUint8(n);n+=1;const U=t.getUint8(n);n+=1;const m=t.getUint8(n);n+=1;const f=t.getUint8(n);n+=1;const y=t.getUint8(n);n+=1;const F=t.getUint8(n);return{...this.headerToFrame(o),packet_type:14,carIdx:e,teamId:l,lapTimeInMS:r,sector1TimeInMS:i,sector2TimeInMS:g,sector3TimeInMS:u,tractionControl:p,gearboxAssist:U,antiLockBrakes:m,equalCarPerformance:f,customSetup:y,valid:F}}decodeLapPositionsPacket(t,a,o){let n=a;if(n+2>t.byteLength)return console.warn("F1 25 decoder: Lap positions packet too small"),null;const e=t.getUint8(n);n+=1;const l=t.getUint8(n);n+=1;const r=[];for(let g=0;g<50;g++){const u=[];for(let p=0;p<22&&!(n+1>t.byteLength);p++)u.push(t.getUint8(n)),n+=1;if(r.push(u),n>=t.byteLength)break}return{...this.headerToFrame(o),packet_type:15,numLaps:e,lapStart:l,positionData:r}}headerToFrame(t){return{t:Date.now(),packetFormat:t.packetFormat,gameYear:t.gameYear,gameMajorVersion:t.gameMajorVersion,gameMinorVersion:t.gameMinorVersion,packetVersion:t.packetVersion,packetId:t.packetId,sessionUID:t.sessionUID.toString(),sessionTime:t.sessionTime,frameIdentifier:t.frameIdentifier,overallFrameIdentifier:t.overallFrameIdentifier,playerCarIndex:t.playerCarIndex,secondaryPlayerCarIndex:t.secondaryPlayerCarIndex}}createBasicFrame(t){return{...this.headerToFrame(t),packet_type:t.packetId}}getPacketTypeName(t){switch(t){case 0:return"Motion";case 1:return"Session";case 2:return"Lap Data";case 3:return"Event";case 4:return"Participants";case 5:return"Car Setups";case 6:return"Car Telemetry";case 7:return"Car Status";case 8:return"Final Classification";case 9:return"Lobby Info";case 10:return"Car Damage";case 11:return"Session History";case 12:return"Tyre Sets";case 13:return"Motion Ex";case 14:return"Time Trial";case 15:return"Lap Positions";default:return`Unknown_${t}`}}getSupportedPacketTypes(){return[{type:0,name:"Motion"},{type:1,name:"Session"},{type:2,name:"Lap Data"},{type:3,name:"Event"},{type:4,name:"Participants"},{type:5,name:"Car Setups"},{type:6,name:"Car Telemetry"},{type:7,name:"Car Status"},{type:8,name:"Final Classification"},{type:9,name:"Lobby Info"},{type:10,name:"Car Damage"},{type:11,name:"Session History"},{type:12,name:"Tyre Sets"},{type:13,name:"Motion Ex"},{type:14,name:"Time Trial"},{type:15,name:"Lap Positions"}]}getAcceptedPacketSizes(){return[1349,753,1285,45,1274,1133,1352,1239,1020,1306,953,1460,231,237,101,573]}}const nt=new tt;export{v as F1_25_PacketType,nt as f1_25_Decoder};
