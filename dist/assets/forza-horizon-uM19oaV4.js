class wt{constructor(){this.previousFrame=null,this.EXPECTED_SIZE=324}decode(o){if(o.byteLength!=this.EXPECTED_SIZE)return console.warn(`Forza decoder: Invalid buffer size. Expected ${this.EXPECTED_SIZE}, got ${o.byteLength}`),null;const e=new DataView(o);let t=0;try{const r=e.getInt32(t,!0);t+=4;const i=e.getUint32(t,!0);t+=4;const a=e.getFloat32(t,!0);t+=4;const s=e.getFloat32(t,!0);t+=4;const l=e.getFloat32(t,!0);t+=4;const u=e.getFloat32(t,!0);t+=4;const c=e.getFloat32(t,!0);t+=4;const g=e.getFloat32(t,!0);t+=4;const F=e.getFloat32(t,!0);t+=4;const R=e.getFloat32(t,!0);t+=4;const p=e.getFloat32(t,!0);t+=4;const h=e.getFloat32(t,!0);t+=4;const d=e.getFloat32(t,!0);t+=4;const S=e.getFloat32(t,!0);t+=4;const T=e.getFloat32(t,!0);t+=4;const m=e.getFloat32(t,!0);t+=4;const L=e.getFloat32(t,!0);t+=4;const v=e.getFloat32(t,!0);t+=4;const z=e.getFloat32(t,!0);t+=4;const I=e.getFloat32(t,!0);t+=4;const N=e.getFloat32(t,!0);t+=4;const f=e.getFloat32(t,!0);t+=4;const y=e.getFloat32(t,!0);t+=4;const C=e.getFloat32(t,!0);t+=4;const E=e.getFloat32(t,!0);t+=4;const D=e.getFloat32(t,!0);t+=4;const P=e.getFloat32(t,!0);t+=4;const V=e.getFloat32(t,!0);t+=4;const b=e.getFloat32(t,!0);t+=4;const A=e.getInt32(t,!0);t+=4;const W=e.getInt32(t,!0);t+=4;const w=e.getInt32(t,!0);t+=4;const U=e.getInt32(t,!0);t+=4;const k=e.getFloat32(t,!0);t+=4;const M=e.getFloat32(t,!0);t+=4;const X=e.getFloat32(t,!0);t+=4;const Z=e.getFloat32(t,!0);t+=4;const O=e.getFloat32(t,!0);t+=4;const _=e.getFloat32(t,!0);t+=4;const B=e.getFloat32(t,!0);t+=4;const Y=e.getFloat32(t,!0);t+=4;const x=e.getFloat32(t,!0);t+=4;const G=e.getFloat32(t,!0);t+=4;const H=e.getFloat32(t,!0);t+=4;const $=e.getFloat32(t,!0);t+=4;const q=e.getFloat32(t,!0);t+=4;const j=e.getFloat32(t,!0);t+=4;const J=e.getFloat32(t,!0);t+=4;const K=e.getFloat32(t,!0);t+=4;const Q=e.getFloat32(t,!0);t+=4;const tt=e.getFloat32(t,!0);t+=4;const et=e.getFloat32(t,!0);t+=4;const ot=e.getFloat32(t,!0);t+=4;const rt=e.getInt32(t,!0);t+=4;const nt=e.getInt32(t,!0);t+=4;const it=e.getInt32(t,!0);t+=4;const at=e.getInt32(t,!0);t+=4;const st=e.getInt32(t,!0);t+=4;const kt=e.getInt32(t,!0);t+=4;const Mt=e.getInt32(t,!0);t+=4;const Xt=e.getInt32(t,!0);t+=4;const lt=e.getFloat32(t,!0);t+=4;const ut=e.getFloat32(t,!0);t+=4;const ct=e.getFloat32(t,!0);t+=4;const gt=e.getFloat32(t,!0);t+=4;const Ft=e.getFloat32(t,!0);t+=4;const Rt=e.getFloat32(t,!0);t+=4;const pt=e.getFloat32(t,!0);t+=4;const ht=e.getFloat32(t,!0);t+=4;const dt=e.getFloat32(t,!0);t+=4;const St=e.getFloat32(t,!0);t+=4;const Tt=e.getFloat32(t,!0);t+=4;const mt=e.getFloat32(t,!0);t+=4;const Lt=e.getFloat32(t,!0);t+=4;const vt=e.getFloat32(t,!0);t+=4;const zt=e.getFloat32(t,!0);t+=4;const It=e.getFloat32(t,!0);t+=4;const Nt=e.getFloat32(t,!0);t+=4;const ft=e.getUint16(t,!0);t+=2;const yt=e.getUint8(t);t+=1;const Ct=e.getUint8(t);t+=1;const Et=e.getUint8(t);t+=1;const Dt=e.getUint8(t);t+=1;const Pt=e.getUint8(t);t+=1;const Vt=e.getUint8(t);t+=1;const bt=e.getInt8(t);t+=1;const At=e.getInt8(t);t+=1;const Wt=e.getInt8(t);t+=1;const n={IsRaceOn:r,TimestampMS:i/1e3,EngineMaxRpm:a,EngineIdleRpm:s,CurrentEngineRpm:l,AccelerationX:u,AccelerationY:c,AccelerationZ:g,VelocityX:F,VelocityY:R,VelocityZ:p,AngularVelocityX:h,AngularVelocityY:d,AngularVelocityZ:S,Yaw:T,Pitch:m,Roll:L,NormalizedSuspensionTravelFrontLeft:v,NormalizedSuspensionTravelFrontRight:z,NormalizedSuspensionTravelRearLeft:I,NormalizedSuspensionTravelRearRight:N,TireSlipRatioFrontLeft:f,TireSlipRatioFrontRight:y,TireSlipRatioRearLeft:C,TireSlipRatioRearRight:E,WheelRotationSpeedFrontLeft:D,WheelRotationSpeedFrontRight:P,WheelRotationSpeedRearLeft:V,WheelRotationSpeedRearRight:b,WheelOnRumbleStripFrontLeft:A,WheelOnRumbleStripFrontRight:W,WheelOnRumbleStripRearLeft:w,WheelOnRumbleStripRearRight:U,WheelInPuddleDepthFrontLeft:k,WheelInPuddleDepthFrontRight:M,WheelInPuddleDepthRearLeft:X,WheelInPuddleDepthRearRight:Z,SurfaceRumbleFrontLeft:O,SurfaceRumbleFrontRight:_,SurfaceRumbleRearLeft:B,SurfaceRumbleRearRight:Y,TireSlipAngleFrontLeft:x,TireSlipAngleFrontRight:G,TireSlipAngleRearLeft:H,TireSlipAngleRearRight:$,TireCombinedSlipFrontLeft:q,TireCombinedSlipFrontRight:j,TireCombinedSlipRearLeft:J,TireCombinedSlipRearRight:K,SuspensionTravelMetersFrontLeft:Q,SuspensionTravelMetersFrontRight:tt,SuspensionTravelMetersRearLeft:et,SuspensionTravelMetersRearRight:ot,CarOrdinal:rt,CarClass:nt,CarPerformanceIndex:it,DrivetrainType:at,NumCylinders:st,PositionX:lt,PositionY:ut,PositionZ:ct,Speed:gt,Power:Ft,Torque:Rt,TireTempFrontLeft:pt,TireTempFrontRight:ht,TireTempRearLeft:dt,TireTempRearRight:St,Boost:Tt,Fuel:mt,DistanceTraveled:Lt,BestLap:vt,LastLap:zt,CurrentLap:It,CurrentRaceTime:Nt,LapNumber:ft,RacePosition:yt,Accel:Ct,Brake:Et,Clutch:Dt,HandBrake:Pt,Gear:Vt,Steer:bt,NormalizedDrivingLine:At,NormalizedAIBrakeDifference:Wt,t:Date.now(),packet_type:1};return this.calculateDerivedFields(n),this.previousFrame=n,n}catch(r){return console.error("Forza decoder error:",r),null}}calculateDerivedFields(o){if(this.previousFrame){const e=o.CurrentRaceTime-this.previousFrame.CurrentRaceTime||.016;o.NormalizedSuspensionVelocityFrontLeft=(o.NormalizedSuspensionTravelFrontLeft-this.previousFrame.NormalizedSuspensionTravelFrontLeft)/e,o.NormalizedSuspensionVelocityFrontRight=(o.NormalizedSuspensionTravelFrontRight-this.previousFrame.NormalizedSuspensionTravelFrontRight)/e,o.NormalizedSuspensionVelocityRearLeft=(o.NormalizedSuspensionTravelRearLeft-this.previousFrame.NormalizedSuspensionTravelRearLeft)/e,o.NormalizedSuspensionVelocityRearRight=(o.NormalizedSuspensionTravelRearRight-this.previousFrame.NormalizedSuspensionTravelRearRight)/e,o.Shifting=o.Gear!==this.previousFrame.Gear?1:0}else o.NormalizedSuspensionVelocityFrontLeft=0,o.NormalizedSuspensionVelocityFrontRight=0,o.NormalizedSuspensionVelocityRearLeft=0,o.NormalizedSuspensionVelocityRearRight=0,o.Shifting=0;o.RaceID=Math.floor(o.TimestampMS/1e6)*1e3+o.TrackOrdinal}getPacketTypeName(o){return o===1?"Forza Horizon":`Unknown_${o}`}getSupportedPacketTypes(){return[{type:1,name:"Forza Horizon"}]}getAcceptedPacketSizes(){return[this.EXPECTED_SIZE]}}const Zt=new wt;export{Zt as forzaDecoder};
